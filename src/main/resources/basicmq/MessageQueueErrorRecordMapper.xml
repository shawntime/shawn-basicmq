<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shanwtime.basicmq.dao.MessageQueueErrorRecordMapper">

    <insert id="save"
            useGeneratedKeys="true"
            keyProperty="id"
            keyColumn="id"
            parameterType="com.shanwtime.basicmq.entity.MessageQueueErrorRecord">
        INSERT INTO MessageQueueErrorRecord (
            operator_id,
            type_id,
            type_desc,
            msg_body,
            error_desc,
            bean_name,
            original_id,
            appId
            )
        VALUES (
            #{operatorId},
            #{typeId},
            #{typeDesc},
            #{msgBody},
            #{errorDesc},
            #{beanName},
            #{originalId},
            #{appId}
        )
    </insert>

    <update id="update" parameterType="com.shanwtime.basicmq.entity.MessageQueueErrorRecord">
        UPDATE
            MessageQueueErrorRecord
        SET
            operator_id = #{operatorId},
            type_id = #{typeId},
            type_desc = #{typeDesc},
            msg_body = #{msgBody},
            error_desc = #{errorDesc},
            bean_name = #{beanName},
            modified_stime = GETDATE(),
            original_id = #{originalId},
            is_re_push = #{isRePush}
        WHERE
            id = #{id}
    </update>

    <select id="getById" resultType="com.shanwtime.basicmq.entity.MessageQueueErrorRecord">
        SELECT
            TOP 1
        <include refid="condition" />
        AND is_re_push = 0
        AND id = #{id}
        AND appId = #{appId}
    </select>

    <select id="getByIds" resultType="com.shanwtime.basicmq.entity.MessageQueueErrorRecord">
        SELECT
        <include refid="condition" />
        AND is_re_push = 0
        AND id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        AND appId = #{appId}
    </select>

    <select id="getByTypeId" resultType="com.shanwtime.basicmq.entity.MessageQueueErrorRecord">
        SELECT
        TOP 1
        <include refid="condition" />
        AND is_re_push = 0
        AND type_id = #{typeId}
        AND appId = #{appId}
    </select>

    <sql id="condition">
            id,
            operator_id AS operatorId,
            type_id AS typeId,
            type_desc AS typeDesc,
            msg_body AS msgBody,
            error_desc AS errorDesc,
            is_re_push AS isRePush,
            bean_name AS beanName,
            original_id AS originalId
        FROM
            MessageQueueErrorRecord WITH (nolock)
        WHERE
            is_del = 0
    </sql>

    <select id="getByTypeIds" resultType="com.shanwtime.basicmq.entity.MessageQueueErrorRecord">
        SELECT
        <include refid="condition" />
        AND is_re_push = 0
        AND type_id IN
        <foreach collection="typeIds" item="typeId" open="(" close=")" separator=",">
            #{typeId}
        </foreach>
        AND appId = #{appId}
    </select>

    <select id="getAll" resultType="com.shanwtime.basicmq.entity.MessageQueueErrorRecord">
        SELECT
        <include refid="condition" />
        AND is_re_push = 0
        AND appId = #{appId}
    </select>

    <update id="updateById">
        UPDATE MessageQueueErrorRecord SET is_re_push = #{isRePush} WHERE id = #{id} AND appId = #{appId}
    </update>

    <update id="updateByIds">
        UPDATE MessageQueueErrorRecord SET is_re_push = #{isRePush} WHERE id
        IN
        <foreach collection="ids" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
        AND appId = #{appId}
    </update>

    <update id="updateByTypeId">
        UPDATE MessageQueueErrorRecord SET is_re_push = #{isRePush} WHERE type_id = #{typeId} AND appId = #{appId}
    </update>

    <update id="updateByTypeIds">
        UPDATE MessageQueueErrorRecord SET is_re_push = #{isRePush} WHERE type_id IN
        <foreach collection="typeIds" item="typeId" close=")" open="(" separator=",">
            #{typeId}
        </foreach>
    </update>
    
</mapper>